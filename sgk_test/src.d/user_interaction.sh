#! /bin/bash


#######################################
#
# 	Функция, печатующая окно с помощью работы со скриптом
#
#	Входные параметры:
#
#	Коды возвратов:
#
#######################################

function print_help_screen() { 
	cat << EOF
	sgk_test [hostname] [serial_number] [date_end_key_APMDZ]

	Дата вводится в формате: dd-mm-YYYY

	Скрипт дублирует результат в файл-журнал. Он расположен в папке output откуда был запущен скрипт
EOF
}


#######################################
#
# 	Функция, печатующая окно с информацией об операторе
#
#	Входные параметры:
#
#	Коды возвратов:
#
#######################################

function print_operator_info_screen() {
	cat << EOF

################# ИНФОРМАЦИЯ ОБ ОПЕРАТОРЕ ###############

ФИО оператора: ${OPERATOR_FULL_NAME}
Должность: ${OPERATOR_POSITION}
Отдел: ${OPERATOR_DEPARTMENT}

#########################################################

EOF
}


#######################################
#
# 	Функция взаимодействия с оператором в случае неверного типа СВТ
#
#	Входные параметры:
#
#	Коды возвратов:
#
#	0 - оператор выбрал положительный ответ
#	1 - оператор выбрал отрицательный ответ
#
#######################################

function ask_about_invalid_server_type() {
	local user_answer=""

	while true; do
		echo -n "Введенное доменное имя не сходится с типом сервера. Все равно продолжить(Y|N): "
		read user_answer
		if echo "$user_answer" | grep "Y" > /dev/null; then
			return 0
		elif echo "$user_answer" | grep "N" > /dev/null; then
			return 1
		else
			echo "Неверное значение. Повторите ввод заново!"
		fi
	done
}


#######################################
#
# 	Функция взаимодействия с оператором в случае ошибок во время монтирования флешки-репозиторий
#
#	Входные параметры:
#
#	Коды возвратов:
#
#	0 - оператор выбрал положительный ответ
#	1 - оператор выбрал отрицательный ответ
#
#######################################

function ask_about_flash_repository() {
	local user_answer=""

	while true; do
		echo -n "Нажмите 'Y', чтобы повторно подключить флешку или 'N', чтобы отменить операцию: "
		read user_answer
		if echo "$user_answer" | grep "Y" > /dev/null; then
			return 0
		elif echo "$user_answer" | grep "N" > /dev/null; then
			return 1
		else
			echo "Неверное значение. Повторите ввод заново!"
		fi
	done
}


#######################################
#
# 	Функция взаимодействия с оператором в случае ошибок во время копирования boot разделов
#
#	Входные параметры:
#
#	Коды возвратов:
#
#	0 - оператор выбрал положительный ответ
#	1 - оператор выбрал отрицательный ответ
#
#######################################

function ask_about_retry_copy_boot() {
	local user_answer=""

	while true; do
		echo -n "Нажмите 'Y', чтобы повторить попытки копирования master boot или 'N', чтобы отменить операцию: "
		read user_answer
		if echo "$user_answer" | grep "Y" > /dev/null; then
			return 0
		elif echo "$user_answer" | grep "N" > /dev/null; then
			return 1
		else
			echo "Неверное значение. Повторить ввод заново!"
		fi
	done
}

#######################################
#
# 	Функция взаимодействия с оператором в случае обнаружение записи в файле со списком ключей АПМДЗ 
#	Входные параметры:
#
#	Коды возвратов:
#
#	0 - оператор выбрал положительный ответ
#	1 - оператор выбрал отрицательный ответ
#
#######################################

function ask_about_exists_apmdz_key() {
	local user_answer=""

	while true; do
		echo -n "Нажмите 'Y', чтобы произвести перезапись, или 'N' чтобы отменить операцию: "
		read user_answer
		if echo "$user_answer" | grep "Y" > /dev/null; then
			return 0
		elif echo "$user_answer" | grep "N" > /dev/null; then
			return 1
		else
			echo "Неверное значение. Повторите ввод заново!"
		fi
	done
}
